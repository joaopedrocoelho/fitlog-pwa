{"version":3,"sources":["components/program/program-exercises.tsx","components/program/program-part.tsx","components/program/program-day.tsx","components/add/add-button.tsx","components/edit/edit-buttons.tsx","components/edit/edit-label.tsx","context/program.tsx","context/day.tsx","context/section.tsx","context/muscle.tsx","components/add/default-data/exercisegroups.tsx","components/add/default-data/exercises.tsx","components/add/default-data/muscles.tsx","firebase/config.js","firebase/firebase.ts","firebase/index.js","components/edit/edit-program-exercises.tsx","components/edit/edit-program-part.tsx","components/edit/edit-program-day.tsx","components/editprogram.tsx","components/add/add.tsx","components/hooks/useLongPress.js","components/loading-code.js","context/userlists.tsx","components/add/add-list-new.tsx","components/add/add-muscle-group/add-muscle-group.tsx","components/add/add-muscle-group/add-section-from-muscle-group.tsx","components/add/add-muscle-group/add-exercise-from-muscle-group.tsx","components/add/add-section/add-section.tsx","components/add/add-section/add-exercise-from-section.tsx","components/add/add-exercise/add-exercise.tsx","components/add/add-new-day/add-new-day.tsx","components/add/add-new-day/add-muscle-group-new-day.tsx","components/add/add-new-day/add-section-new-day.tsx","components/add/add-new-day/add-exercise-new-day.tsx","components/auth/sign-in.tsx","components/auth/sign-out.tsx","components/nav/burger-menu.tsx","components/nav/top-nav.tsx","components/nav/back-button.tsx","components/nav/plus-button.tsx","components/nav/nav-add.tsx","components/nav/nav.tsx","components/home.js","Router.tsx","context/add.tsx","App.tsx","components/hooks/useProgram.tsx","components/hooks/useAdd.tsx","components/hooks/useMuscle.tsx","components/hooks/useSection.tsx","components/hooks/useDay.tsx","components/hooks/useLists.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["ProgramExercises","name","exercises","useState","exerciseList","className","map","index","ProgramPart","data","types","Object","entries","ProgramDay","parts","AddButton","caption","callback","styleClass","onClick","icon","faPlus","EditButtons","onClickEdit","onClickDel","size","children","deleteVisible","faPen","e","faTrashAlt","EditLabel","labelText","editElement","deleteElement","label","onInputClick","React","useRef","editArea","labelvalue","setValue","oldvalue","editable","setEditable","clickListener","current","contains","target","useEffect","document","addEventListener","removeEventListener","focus","ref","console","log","style","width","length","onChange","value","disabled","faCircle","color","faTimes","faCheckCircle","DefaultProgramContext","program","undefined","days","setProgram","p","ProgramContext","createContext","DayBeingEditedDefault","dayEdit","setDay","day","DayBeingEdited","SectionContextDefault","section","setSection","Section","SectionContext","MuscleContextDefault","muscle","setMuscle","MuscleContext","exerciseGroupsList","ExercisesList","Shoulders","Triceps","Biceps","Chest","Back","Legs","Abs","muscleList","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","auth","user","db","userProgram","sectionList","exercisesList","firebase","initializeApp","this","firestore","a","collection","doc","uid","set","displayName","email","userId","get","then","exists","register","provider","GoogleAuthProvider","signInWithRedirect","signOut","newProgram","update","catch","error","newMuscleList","SectionList","newSectionList","newExerciseList","EditProgramExercises","dayId","dayName","muscleId","typeId","useContext","muscles","history","useHistory","exerciseType","setExerciseList","changedName","changedExerciseType","fromEntries","updateProgram","splice","push","pathname","search","EditProgramPart","setMuscles","obj","EditProgramDay","EditProgram","active","setActive","openList","faCaretRight","listItem","Add","defaultValue","buttonLabel","labelRef","htmlFor","type","contentEditable","preventDefault","event","isTouchEvent","touches","useLongPress","onLongPress","shouldPreventDefault","delay","longPressTriggered","setLongPressTriggered","timeout","start","useCallback","passive","setTimeout","clear","shouldTriggerClick","clearTimeout","onMouseDown","onTouchStart","onMouseUp","onMouseLeave","onTouchEnd","LoadingCode","props","speed","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","UsersLists","setUsersList","newList","AddList","header","useAuthState","MultiSelect","setMultiSelect","MultiSelectArray","setMultiSelectArray","keys","listKeys","setListKeys","list","setList","loading","setLoading","useQueryParams","StringParam","group","sectionQ","query","renderExerciseList","find","element","renderList","oldArray","innerHTML","longPressEvent","id","key","includes","AddMuscleGroup","newMuscle","Array","isArray","AddSectionFromMuscleGroup","param","AddExerciseFromMuscleGroup","clonedProgram","setClonedProgram","AddSection","AddExerciseFromSection","AddExercise","clonedDay","setClonedDay","AddNewDay","AddMuscleGroupNewDay","AddSectionNewDay","AddExerciseNewDay","SignIn","FirebaseApp","login","SignOut","logout","BurgerMenu","isOpen","src","photoURL","alt","TopNav","IsActive","setIsActive","IsSideMenuOpen","setIsSideMenuOpen","isActive","toggleButton","barColor","to","faEdit","BackButton","faCaretLeft","goBack","PlusButtton","linkURL","setLinkURL","NavAdd","plus","headerFromPath","setHeader","location","useLocation","startsWith","withRouter","renderWorkoutNav","setRenderWorkoutNav","renderTopNav","setRenderTopNav","idx","AppRouter","renderSwitch","setRenderSwitch","loadingData","setLoadingData","checkIn","newExercisesList","exact","path","ReactRouterRoute","Route","render","clonedList","updateExerciseList","updateSectionList","clonedExerciseList","updateMuscleList","addContextDefault","defaultObj","setAdd","o","SetAdd","App","setEditedProgram","setProgramDays","useProgram","setDefaultObj","useAdd","setNewMuscle","useMuscle","setNewSection","useSection","setCurrentDay","useDay","lists","setMuscleList","setSectionList","useLists","window","onbeforeunload","Provider","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById","URL","process","href","origin","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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CC,MAOIC,EAJQ1C,IAAMqC,cAC3BC,GCNIK,EAA2C,CAC/CC,QAAS,SACTC,WAAY,SAACC,MAOAC,EAJQ/C,IAAMqC,cAC3BM,GCNIK,EAAyC,CAC7CC,OAAQ,GACRC,UAAW,SAACD,MAOCE,EAJOnD,IAAMqC,cAC1BW,G,iDCXaI,G,YAFsB,CAAC,UAAW,OAAQ,cCmI1CC,EAnIiC,CAC9CC,UAAW,CACT,wBACA,uBACA,gCACA,kBACA,uBACA,iCACA,iCACA,yBACA,wBACA,sCACA,qCACA,iBACA,kCACA,iBACA,aACA,2BACA,wBACA,uBACA,qCACA,gCACA,wBACA,+BACA,eAEFC,QAAS,CACP,mCACA,iCACA,sCACA,mBACA,sBACA,0BACA,kBACA,2BACA,2BACA,WACA,iBACA,uCACA,mBAEFC,OAAQ,CACN,eACA,+BACA,aACA,8BACA,eACA,uBACA,yBACA,cACA,uBACA,wBACA,uBACA,+BACA,uBAEFC,MAAO,CACL,kBACA,8BACA,sCACA,2BACA,4BACA,oBACA,8BACA,+BACA,uBACA,sCACA,oBACA,eACA,WACA,sBAEFC,KAAM,CACJ,cACA,gBACA,UACA,WACA,+BACA,eACA,eACA,sBACA,iBACA,eACA,gBACA,kBACA,cACA,UACA,YACA,mBACA,qBACA,8BACA,aAEFC,KAAM,CACJ,qBACA,sBACA,uBACA,gBACA,8BACA,oBACA,gBACA,kBACA,wBACA,YACA,yBACA,oBACA,4BACA,0BACA,8BACA,mCACA,wBACA,gBACA,kBAEFC,IAAK,CACH,mBACA,WACA,eACA,SACA,iBACA,iBACA,cACA,qBACA,oBACA,QACA,4BACA,aACA,4BCrHWC,EAVI,CACjB,YACA,UACA,SACA,QACA,OACA,OACA,OCEaC,EATQ,CACrBC,OAAQ,0CACRC,WAAY,oCACZC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,6CC8HMC,EADK,I,WAhHlB,aAAe,yBARfC,UAQc,OAPdC,UAOc,OANdC,QAMc,OALdC,iBAKc,OAJdZ,gBAIc,OAHda,iBAGc,OAFdC,mBAEc,EACZC,IAA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","file":"static/js/main.c931ef04.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\ninterface Props {\r\n  name: string;\r\n  exercises: string[];\r\n}\r\n\r\nconst ProgramExercises: React.FC<Props> = ({ name, exercises }) => {\r\n  const [exerciseList] = useState<string[]>(exercises);\r\n\r\n  return (\r\n    <div className=\"ProgramExercises\">\r\n      <h5>{name}</h5>\r\n\r\n      <ul className=\"exercises\">\r\n        {exerciseList.map((name, index) => (\r\n          <li key={index}>{name}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgramExercises;\r\n","import React from \"react\";\r\nimport ProgramExercises from \"./program-exercises\";\r\n\r\ninterface Props {\r\n  name: string;\r\n  data: object;\r\n}\r\n\r\nconst ProgramPart: React.FC<Props> = ({ name, data }) => {\r\n  const types = Object.entries(data);\r\n\r\n  return (\r\n    <div className=\"ProgramPart\">\r\n      <h2>{name}</h2>\r\n\r\n      {types.map(([name, exercises], index) => (\r\n        <ProgramExercises name={name} exercises={exercises} key={index} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgramPart;\r\n","import React from \"react\";\r\nimport ProgramPart from \"./program-part\";\r\n\r\ninterface Props {\r\n  data: object;\r\n}\r\n\r\nconst ProgramDay: React.FC<Props> = ({ data }) => {\r\n  const parts = Object.entries(data);\r\n\r\n  return (\r\n    <div className=\"ProgramDay\">\r\n      {parts.map(([name, data], index) => (\r\n        <ProgramPart name={name} data={data} key={index} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgramDay;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport React from \"react\";\r\n\r\ninterface Props {\r\n  caption: string;\r\n\r\n  callback?: () => void;\r\n  styleClass?: \"add-day-btn\" | \"add-btn\";\r\n}\r\n\r\nconst AddButton: React.FC<Props> = ({\r\n  caption,\r\n\r\n  callback,\r\n  styleClass = \"add-btn\",\r\n}) => {\r\n  return (\r\n    <button\r\n      className={styleClass}\r\n      onClick={() => {\r\n        callback && callback();\r\n      }}\r\n    >\r\n      <FontAwesomeIcon icon={faPlus} />\r\n      {caption}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default AddButton;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrashAlt, faPen } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\ninterface Props {\r\n  onClickEdit?: (e: any) => void;\r\n  onClickDel?: (e: any) => void;\r\n  deleteVisible?: boolean;\r\n  size?:\r\n    | \"2x\"\r\n    | \"xs\"\r\n    | \"lg\"\r\n    | \"sm\"\r\n    | \"1x\"\r\n    | \"3x\"\r\n    | \"4x\"\r\n    | \"5x\"\r\n    | \"6x\"\r\n    | \"7x\"\r\n    | \"8x\"\r\n    | \"9x\"\r\n    | \"10x\";\r\n}\r\n\r\nconst EditButtons: React.FC<Props> = ({\r\n  onClickEdit,\r\n  onClickDel,\r\n  size,\r\n  children,\r\n  deleteVisible,\r\n}) => {\r\n  return (\r\n    <>\r\n      <FontAwesomeIcon\r\n        icon={faPen}\r\n        className={\"edit-icon\"}\r\n        onClick={(e) => {\r\n          deleteVisible = true;\r\n          onClickEdit && onClickEdit(e);\r\n        }}\r\n        size={size || \"1x\"}\r\n      />\r\n\r\n      {children}\r\n      <FontAwesomeIcon\r\n        icon={faTrashAlt}\r\n        className={deleteVisible ? \"delete-icon visible\" : \"delete-icon\"}\r\n        onClick={onClickDel}\r\n        size={size || \"1x\"}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditButtons;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./edit.css\";\r\n\r\nimport EditButtons from \"./edit-buttons\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCheckCircle,\r\n  faCircle,\r\n  faTimes,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\ninterface Props {\r\n  labelText: string;\r\n  editElement: (name: string) => void;\r\n  deleteElement?: (name: string) => void; //change to required\r\n  onInputClick?: (e: React.MouseEvent) => void;\r\n  size?:\r\n    | \"2x\"\r\n    | \"xs\"\r\n    | \"lg\"\r\n    | \"sm\"\r\n    | \"1x\"\r\n    | \"3x\"\r\n    | \"4x\"\r\n    | \"5x\"\r\n    | \"6x\"\r\n    | \"7x\"\r\n    | \"8x\"\r\n    | \"9x\"\r\n    | \"10x\";\r\n}\r\n\r\nconst EditLabel: React.FC<Props> = ({\r\n  labelText,\r\n  editElement,\r\n  deleteElement,\r\n  size,\r\n  onInputClick,\r\n}) => {\r\n  const label = React.useRef<HTMLInputElement>(null);\r\n  const editArea = React.useRef<HTMLSpanElement>(null);\r\n  const [labelvalue, setValue] = useState(labelText);\r\n  const [oldvalue] = useState<string>(labelText);\r\n\r\n  const CancelSize = () => {\r\n    if (size === \"2x\") {\r\n      return \"lg\";\r\n    } else if (size === \"lg\") {\r\n      return \"sm\";\r\n    } else return \"xs\";\r\n  };\r\n\r\n  const [editable, setEditable] = useState(false);\r\n\r\n  const clickListener = (e: MouseEvent) => {\r\n    if (editArea.current?.contains(e.target as Node) === false) {\r\n      setEditable(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Attach the listeners on component mount.\r\n    document.addEventListener(\"click\", clickListener);\r\n\r\n    // Detach the listeners on component unmount.\r\n    return () => {\r\n      document.removeEventListener(\"click\", clickListener);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (label.current && editable) {\r\n      label.current.focus();\r\n    }\r\n  }, [editable]);\r\n\r\n  return (\r\n    <span className={\"edit-buttons\"} ref={editArea}>\r\n      <EditButtons\r\n        onClickEdit={(e) => {\r\n          /* e.stopPropagation(); */\r\n          setEditable(true);\r\n          console.log(\"editable\", editable);\r\n        }}\r\n        onClickDel={deleteElement}\r\n        size={size}\r\n        deleteVisible={editable}\r\n      >\r\n        <input\r\n          className={\"editable-label\"}\r\n          style={{ width: `${labelvalue.length}em` }}\r\n          ref={label}\r\n          onChange={(e) => {\r\n            setValue((e.target as HTMLInputElement).value);\r\n          }}\r\n          value={labelvalue}\r\n          disabled={!editable}\r\n        />\r\n        <span\r\n          className={\r\n            editable ? \"fa-layers fa-fw visible\" : \"fa-layers fa-fw hidden\"\r\n          }\r\n          onClick={(e) => {\r\n            /* e.stopPropagation(); */\r\n            setValue(oldvalue);\r\n            setEditable(!editable);\r\n          }}\r\n        >\r\n          <FontAwesomeIcon\r\n            icon={faCircle}\r\n            color={\"var(--light-red)\"}\r\n            size={size}\r\n          />\r\n          <FontAwesomeIcon icon={faTimes} color=\"white\" size={CancelSize()} />\r\n        </span>\r\n        <FontAwesomeIcon\r\n          icon={faCheckCircle}\r\n          className={editable ? \"check-edit visible\" : \"check-edit\"}\r\n          onClick={(e) => {\r\n            /* e.stopPropagation(); */\r\n            editElement(labelvalue);\r\n            setEditable(false);\r\n          }}\r\n          size={size}\r\n        />\r\n      </EditButtons>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default EditLabel;\r\n","import React from \"react\";\r\nimport Program, { muscleGroup } from \"../interfaces/program\";\r\n\r\nexport interface ProgramContextInt {\r\n  program: Program | undefined;\r\n  days: Array<[string, muscleGroup]> | undefined;\r\n  setProgram: (p: Program) => void;\r\n}\r\n\r\nexport const DefaultProgramContext: ProgramContextInt = {\r\n  program: undefined,\r\n  days: undefined,\r\n  setProgram: (p: Program): void => {},\r\n};\r\n\r\nconst ProgramContext = React.createContext<ProgramContextInt>(\r\n  DefaultProgramContext\r\n);\r\n\r\nexport default ProgramContext;\r\n","import React from \"react\";\r\n\r\nexport interface DayBeingEditedInt {\r\n  dayEdit: string;\r\n  setDay: (day: string) => void;\r\n}\r\n\r\nexport const DayBeingEditedDefault: DayBeingEditedInt = {\r\n  dayEdit: \"Day 1\",\r\n  setDay: (day: string): void => {},\r\n};\r\n\r\nconst DayBeingEdited = React.createContext<DayBeingEditedInt>(\r\n  DayBeingEditedDefault\r\n);\r\n\r\nexport default DayBeingEdited;\r\n","import React from \"react\";\r\n\r\nexport interface SectionContextInt {\r\n  section: string;\r\n  setSection: (Section: string) => void;\r\n}\r\n\r\nconst SectionContextDefault: SectionContextInt = {\r\n  section: \"Biceps\",\r\n  setSection: (Section: string): void => {},\r\n};\r\n\r\nconst SectionContext = React.createContext<SectionContextInt>(\r\n  SectionContextDefault\r\n);\r\n\r\nexport default SectionContext;\r\n","import React from \"react\";\r\n\r\nexport interface MuscleContextInt {\r\n  muscle: string;\r\n  setMuscle: (muscle: string) => void;\r\n}\r\n\r\nconst MuscleContextDefault: MuscleContextInt = {\r\n  muscle: \"\",\r\n  setMuscle: (muscle: string): void => {},\r\n};\r\n\r\nconst MuscleContext = React.createContext<MuscleContextInt>(\r\n  MuscleContextDefault\r\n);\r\n\r\nexport default MuscleContext;\r\n","const exerciseGroupsList: string[] = [\"Warm-up\", \"Main\", \"Secondary\"];\r\n\r\nexport default exerciseGroupsList;\r\n","const ExercisesList: Record<string, string[]> = {\r\n  Shoulders: [\r\n    \"Arnold Dumbbell Press\",\r\n    \"Barbell Front Raises\",\r\n    \"Behind The Neck Barbell Press\",\r\n    \"Cable Face Pull\",\r\n    \"Front Dumbbell Raise\",\r\n    \"Hammer Strength Shoulder Press\",\r\n    \"Incline Rear Delt Dumbbell Row\",\r\n    \"Lateral Dumbbell Raise\",\r\n    \"Lateral Machine Raise\",\r\n    \"Low-Pulley Bent-over Lateral Raises\",\r\n    \"Low-Pulley Standing Lateral Raises\",\r\n    \"Military Press\",\r\n    \"One-Arm Standing Dumbbell Press\",\r\n    \"Overhead Press\",\r\n    \"Push Press\",\r\n    \"Rear Delt Dumbbell Raise\",\r\n    \"Rear Delt Machine Fly\",\r\n    \"Seated Barbell Press\",\r\n    \"Seated Barbell Press Smith Machine\",\r\n    \"Seated Dumbbell Lateral Raise\",\r\n    \"Seated Dumbbell Press\",\r\n    \"Smith Machine Overhead Press\",\r\n    \"Upright Row\",\r\n  ],\r\n  Triceps: [\r\n    \"Cable Overhead Triceps Extension\",\r\n    \"Close Grip Barbell Bench Press\",\r\n    \"Dumbbell Overhead Triceps Extension\",\r\n    \"Dumbell Kickback\",\r\n    \"EZ-Bar Skullcrusher\",\r\n    \"Lying Triceps Extension\",\r\n    \"Narrow Push-ups\",\r\n    \"One Arm Reverse Pushdown\",\r\n    \"Parallel Bar Triceps Dip\",\r\n    \"Ring Dip\",\r\n    \"Rope Push Down\",\r\n    \"Smith Machine Close Grip Bench Press\",\r\n    \"V-Bar Push Down\",\r\n  ],\r\n  Biceps: [\r\n    \"Barbell Curl\",\r\n    \"Barbell Curl Against Incline\",\r\n    \"Cable Curl\",\r\n    \"Dumbbell Concentration Curl\",\r\n    \"Dumbbel Curl\",\r\n    \"Dumbbell Hammer Curl\",\r\n    \"Dumbbell Preacher Curl\",\r\n    \"EZ-Bar Curl\",\r\n    \"EZ-Bar Preacher Curl\",\r\n    \"Machine Preacher Curl\",\r\n    \"Seated Dumbbell Curl\",\r\n    \"Seated Incline Dumbbell Curl\",\r\n    \"Seated Machine Curl\",\r\n  ],\r\n  Chest: [\r\n    \"Cable Crossover\",\r\n    \"Decline Barbell Bench Press\",\r\n    \"Decline Hammer Strength Chest Press\",\r\n    \"Flat Barbell Bench Press\",\r\n    \"Flat Dumbbell Bench Press\",\r\n    \"Flat Dumbbell Fly\",\r\n    \"Incline Barbell Bench Press\",\r\n    \"Incline Dumbbell Bench Press\",\r\n    \"Incline Dumbbell Fly\",\r\n    \"Incline Hammer Strength Chest Press\",\r\n    \"Parallel Bar Dips\",\r\n    \"Pectoral Fly\",\r\n    \"Push-ups\",\r\n    \"Seated Machine Fly\",\r\n  ],\r\n  Back: [\r\n    \"Barbell Row\",\r\n    \"Barbell Shrug\",\r\n    \"Chin Up\",\r\n    \"Deadlift\",\r\n    \"Dual Pulley Seated Cable Row\",\r\n    \"Dumbbell Row\",\r\n    \"Good Morning\",\r\n    \"Hammer Strength Row\",\r\n    \"Hyperextension\",\r\n    \"Lat Pulldown\",\r\n    \"Machine Shrug\",\r\n    \"Neutral Chin Up\",\r\n    \"Pendlay Row\",\r\n    \"Pull Up\",\r\n    \"Rack Pull\",\r\n    \"Seated Cable Row\",\r\n    \"Seated Row Machine\",\r\n    \"Straight-Arm Cable Pushdown\",\r\n    \"T-Bar Row\",\r\n  ],\r\n  Legs: [\r\n    \"Barbell Calf Raise\",\r\n    \"Barbell Front Squat\",\r\n    \"Barbell Glute Bridge\",\r\n    \"Barbell Squat\",\r\n    \"Barbell Squat Smith Machine\",\r\n    \"Donkey Calf Raise\",\r\n    \"Glute Machine\",\r\n    \"Glute-Ham Raise\",\r\n    \"Leg Extension Machine\",\r\n    \"Leg Press\",\r\n    \"Lying Leg Curl Machine\",\r\n    \"Romanian Deadlift\",\r\n    \"Seated Calf Raise Machine\",\r\n    \"Seated Leg Curl Machine\",\r\n    \"Standing Calf Raise Machine\",\r\n    \"Standing Glute Extension Machine\",\r\n    \"Stiff-Legged Deadlift\",\r\n    \"Sumo Deadlift\",\r\n    \"Walking Lunges\",\r\n  ],\r\n  Abs: [\r\n    \"Ab-Wheel Rollout\",\r\n    \"Butt Ups\",\r\n    \"Cable Crunch\",\r\n    \"Crunch\",\r\n    \"Crunch Machine\",\r\n    \"Decline Crunch\",\r\n    \"Dragon Flag\",\r\n    \"Hanging Knee Raise\",\r\n    \"Hanging Leg Raise\",\r\n    \"Plank\",\r\n    \"Side Dumbbell/Weight Bend\",\r\n    \"Side Plank\",\r\n    \"Standings Side Dumbbell\",\r\n  ],\r\n};\r\n\r\nexport default ExercisesList;\r\n","const muscleList = [\r\n  \"Shoulders\",\r\n  \"Triceps\",\r\n  \"Biceps\",\r\n  \"Chest\",\r\n  \"Back\",\r\n  \"Legs\",\r\n  \"Abs\",\r\n];\r\n\r\nexport default muscleList;\r\n","const firebaseConfig = {\r\n  apiKey: \"AIzaSyAs9I7_F506XxHtb85WTU5n00GCs3uCzDU\",\r\n  authDomain: \"fitlog-typescript.firebaseapp.com\",\r\n  projectId: \"fitlog-typescript\",\r\n  storageBucket: \"fitlog-typescript.appspot.com\",\r\n  messagingSenderId: \"626280586926\",\r\n  appId: \"1:626280586926:web:21fd8bfba9451a9d31d73f\",\r\n};\r\n\r\nexport default firebaseConfig;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport exerciseGroupsList from \"../components/add/default-data/exercisegroups\";\r\nimport ExercisesList from \"../components/add/default-data/exercises\";\r\nimport muscleList from \"../components/add/default-data/muscles\";\r\nimport Program from \"../interfaces/program\";\r\n\r\nimport firebaseConfig from \"./config\";\r\n\r\nclass Firebase {\r\n  auth: firebase.auth.Auth;\r\n  user: firebase.User | null | undefined;\r\n  db: firebase.firestore.Firestore;\r\n  userProgram: {} | Program | undefined;\r\n  muscleList: string[] | undefined;\r\n  sectionList: string[] | undefined;\r\n  exercisesList: Record<string, string[]> | undefined;\r\n\r\n  constructor() {\r\n    firebase.initializeApp(firebaseConfig);\r\n    this.auth = firebase.auth();\r\n    this.db = firebase.firestore();\r\n    this.userProgram = {};\r\n    this.muscleList = muscleList;\r\n    this.sectionList = exerciseGroupsList;\r\n    this.exercisesList = ExercisesList;\r\n  }\r\n\r\n  async register() {\r\n    //creates a doc in the firestore for new users\r\n    if (this.user) {\r\n      await this.db.collection(\"users\").doc(this.user.uid).set({\r\n        name: this.user.displayName,\r\n        email: this.user.email,\r\n        userId: this.user.uid,\r\n        program: {},\r\n        muscleList: this.muscleList,\r\n        sectionList: this.sectionList,\r\n        exerciseList: this.exercisesList,\r\n      });\r\n    }\r\n  }\r\n\r\n  async checkIn(user: firebase.User): Promise<any> {\r\n    this.user = user;\r\n    await this.db\r\n      .collection(\"users\")\r\n      .doc(this.user?.uid)\r\n      .get()\r\n      .then((doc) => {\r\n        if (doc.exists) {\r\n          //if it exists it's an old user\r\n          this.userProgram = doc.data()?.program;\r\n          this.muscleList = doc.data()?.muscleList;\r\n          this.sectionList = doc.data()?.sectionList;\r\n          this.exercisesList = doc.data()?.exerciseList;\r\n\r\n          console.log(\r\n            \"properties\",\r\n            this.userProgram,\r\n            this.muscleList,\r\n            this.sectionList,\r\n            this.exercisesList\r\n          );\r\n        } else {\r\n          //if it doesn't it's a new user\r\n          this.register();\r\n          return;\r\n        }\r\n      });\r\n  }\r\n\r\n  async login() {\r\n    //logs in with google\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    return await this.auth.signInWithRedirect(provider);\r\n  }\r\n\r\n  async logout() {\r\n    // logs out\r\n    return await this.auth.signOut().then(() => console.log(\"logged out\"));\r\n  }\r\n\r\n  async updateProgram(newProgram: {}) {\r\n    await this.db\r\n      .collection(\"users\")\r\n      .doc(this.user?.uid)\r\n      .update({\r\n        program: newProgram,\r\n      })\r\n      .then(() => console.log(\"Program updated successfully!\"))\r\n      .catch((error: any) => console.error(\"Error updating program:\", error));\r\n  }\r\n\r\n  async updateMuscleList(newMuscleList: string[] | undefined) {\r\n    await this.db\r\n      .collection(\"users\")\r\n      .doc(this.user?.uid)\r\n      .update({\r\n        SectionList: newMuscleList,\r\n      })\r\n      .then(() => console.log(\"List of muscles updated successfully!\"))\r\n      .catch((error: any) => console.error(\"Error updating list:\", error));\r\n  }\r\n\r\n  async updateSectionList(newSectionList: string[] | undefined) {\r\n    await this.db\r\n      .collection(\"users\")\r\n      .doc(this.user?.uid)\r\n      .update({\r\n        SectionList: newSectionList,\r\n      })\r\n      .then(() => console.log(\"List of sections updated successfully!\"))\r\n      .catch((error: any) => console.error(\"Error updating list:\", error));\r\n  }\r\n\r\n  async updateExerciseList(\r\n    newExerciseList: Record<string, string[]> | undefined\r\n  ) {\r\n    await this.db\r\n      .collection(\"users\")\r\n      .doc(this.user?.uid)\r\n      .update({\r\n        exerciseList: newExerciseList,\r\n      })\r\n      .then(() => console.log(\"List of exercises updated successfully!\"))\r\n      .catch((error: any) => console.error(\"Error updating list:\", error));\r\n  }\r\n}\r\n\r\nconst firebaseApp = new Firebase();\r\nexport default firebaseApp;\r\n","import firebaseApp from \"./firebase.ts\";\r\n\r\nexport default firebaseApp;\r\n","import React, { useContext, useState } from \"react\";\r\nimport EditLabel from \"./edit-label\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport ProgramContext from \"../../context/program\";\r\nimport AddButton from \"../add/add-button\";\r\nimport DayBeingEdited from \"../../context/day\";\r\nimport SectionContext from \"../../context/section\";\r\nimport MuscleContext from \"../../context/muscle\";\r\nimport firebaseApp from \"../../firebase\";\r\n\r\ninterface Props {\r\n  name: string;\r\n  exercises: string[];\r\n  dayId: number;\r\n  dayName: string;\r\n  muscleId: number;\r\n  typeId: number;\r\n}\r\n\r\nconst EditProgramExercises: React.FC<Props> = ({\r\n  name,\r\n  exercises,\r\n  dayId,\r\n  dayName,\r\n  muscleId,\r\n  typeId,\r\n}) => {\r\n  const { days, setProgram } = useContext(ProgramContext);\r\n  const { dayEdit, setDay } = useContext(DayBeingEdited);\r\n  const { muscle, setMuscle } = useContext(MuscleContext);\r\n  const { section, setSection } = useContext(SectionContext);\r\n\r\n  const muscles = days && Object.entries(days[dayId][1]);\r\n  const history = useHistory();\r\n\r\n  const exerciseType = muscles && Object.entries(muscles[muscleId][1]);\r\n  const [exerciseList, setExerciseList] = useState<string[]>(exercises);\r\n\r\n  return days && muscles && exerciseType ? (\r\n    <div className=\"ProgramExercises\">\r\n      <h5>\r\n        <EditLabel\r\n          labelText={name}\r\n          editElement={(changedName) => {\r\n            if (name !== changedName) {\r\n              exerciseType[typeId][0] = changedName;\r\n              const changedExerciseType = Object.fromEntries(exerciseType);\r\n              muscles[muscleId][1] = changedExerciseType;\r\n              days[dayId][1] = Object.fromEntries(muscles);\r\n              firebaseApp.updateProgram(Object.fromEntries(days));\r\n              setProgram(Object.fromEntries(days));\r\n            }\r\n          }}\r\n          deleteElement={() => {\r\n            exerciseType.splice(typeId, 1);\r\n            const changedExerciseType = Object.fromEntries(exerciseType);\r\n            muscles[muscleId][1] = changedExerciseType;\r\n            days[dayId][1] = Object.fromEntries(muscles);\r\n            firebaseApp.updateProgram(Object.fromEntries(days));\r\n            setProgram(Object.fromEntries(days));\r\n          }}\r\n          size={\"2x\"}\r\n        />\r\n      </h5>\r\n\r\n      <ul className=\"edit-exercises\">\r\n        <AddButton\r\n          caption={\"exercise\"}\r\n          callback={() => {\r\n            setDay(dayName);\r\n            setSection(exerciseType[typeId][0]);\r\n            setMuscle(muscles[muscleId][0]);\r\n\r\n            history.push({\r\n              pathname: `/add-exercise`,\r\n              search: `?day=${dayEdit}&group=${muscle}&sectionQ=${section}`,\r\n            });\r\n          }}\r\n        />\r\n        {exerciseList.map((name, index) => (\r\n          <li key={index}>\r\n            <EditLabel\r\n              labelText={name}\r\n              editElement={(changedName) => {\r\n                if (name !== changedName) {\r\n                  exercises[index] = changedName;\r\n                  setExerciseList([...exercises]);\r\n                  exerciseType[typeId][1] = exercises;\r\n                  muscles[muscleId][1] = Object.fromEntries(exerciseType);\r\n                  days[dayId][1] = Object.fromEntries(muscles);\r\n                  firebaseApp.updateProgram(Object.fromEntries(days));\r\n                  setProgram(Object.fromEntries(days));\r\n                }\r\n              }}\r\n              deleteElement={() => {\r\n                exerciseList.splice(index, 1);\r\n                setExerciseList([...exerciseList]);\r\n                exerciseType[typeId][1] = exercises;\r\n\r\n                muscles[muscleId][1] = Object.fromEntries(exerciseType);\r\n\r\n                days[dayId][1] = Object.fromEntries(muscles);\r\n                firebaseApp.updateProgram(Object.fromEntries(days));\r\n                setProgram(Object.fromEntries(days));\r\n              }}\r\n              size={\"lg\"}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  ) : (\r\n    <div> </div>\r\n  );\r\n};\r\n\r\nexport default EditProgramExercises;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport EditProgramExercises from \"./edit-program-exercises\";\r\nimport EditLabel from \"./edit-label\";\r\nimport ProgramContext from \"../../context/program\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { exerciseCategory, muscleGroup } from \"../../interfaces/program\";\r\nimport AddButton from \"../add/add-button\";\r\nimport DayBeingEdited from \"../../context/day\";\r\nimport MuscleContext from \"../../context/muscle\";\r\nimport firebaseApp from \"../../firebase\";\r\n\r\ninterface Props {\r\n  name: string;\r\n  data: object;\r\n  dayId: number;\r\n  dayName: string;\r\n  muscleId: number;\r\n}\r\n\r\nconst EditProgramPart: React.FC<Props> = ({\r\n  name,\r\n  data,\r\n  dayId,\r\n  muscleId,\r\n  dayName,\r\n}) => {\r\n  const types = Object.entries(data);\r\n  const { days, setProgram } = useContext(ProgramContext);\r\n  const { dayEdit, setDay } = useContext(DayBeingEdited);\r\n  const { muscle, setMuscle } = useContext(MuscleContext);\r\n  const [muscles, setMuscles] = useState<[string, exerciseCategory][]>();\r\n\r\n  useEffect(() => {\r\n    days && setMuscles(Object.entries(days[dayId][1]));\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"ProgramPart\">\r\n      <h2 className={\"edit\"}>\r\n        <EditLabel\r\n          labelText={name}\r\n          editElement={(changedName) => {\r\n            if (muscles && days) {\r\n              if (name !== changedName) {\r\n                muscles[muscleId][0] = changedName;\r\n                const obj: muscleGroup = Object.fromEntries(muscles);\r\n                days[dayId][1] = obj;\r\n                firebaseApp.updateProgram(Object.fromEntries(days));\r\n                setProgram(Object.fromEntries(days));\r\n              }\r\n            }\r\n          }}\r\n          deleteElement={() => {\r\n            if (muscles && days) {\r\n              muscles.splice(muscleId, 1);\r\n              const obj: muscleGroup = Object.fromEntries(muscles);\r\n              days[dayId][1] = obj;\r\n              firebaseApp.updateProgram(Object.fromEntries(days));\r\n              setProgram(Object.fromEntries(days));\r\n            }\r\n          }}\r\n        />\r\n      </h2>\r\n\r\n      <AddButton\r\n        caption={\"exercise type\"}\r\n        callback={() => {\r\n          setDay(dayName);\r\n          setMuscle(name);\r\n\r\n          history.push({\r\n            pathname: `/add-section`,\r\n            search: `?day=${dayEdit}&group=${muscle}`,\r\n          });\r\n        }}\r\n      />\r\n      {types.map(([name, exercises], index) => (\r\n        <EditProgramExercises\r\n          name={name}\r\n          exercises={exercises}\r\n          dayId={dayId}\r\n          dayName={dayName}\r\n          muscleId={muscleId}\r\n          typeId={index}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProgramPart;\r\n","import React from \"react\";\r\nimport EditProgramPart from \"./edit-program-part\";\r\n\r\ninterface Props {\r\n  data: object;\r\n  dayId: number;\r\n  dayName: string;\r\n}\r\n\r\nconst EditProgramDay: React.FC<Props> = ({ data, dayId, dayName }) => {\r\n  const parts = Object.entries(data);\r\n\r\n  return (\r\n    <div className=\"ProgramDay\">\r\n      {parts.map(([name, data], index) => {\r\n        return (\r\n          <>\r\n            <EditProgramPart\r\n              name={name}\r\n              data={data}\r\n              dayId={dayId}\r\n              dayName={dayName}\r\n              muscleId={index}\r\n            />\r\n          </>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProgramDay;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport AddButton from \"./add/add-button\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCaretRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport Program from \"../interfaces/program\";\r\nimport EditProgramDay from \"./edit/edit-program-day\";\r\nimport EditLabel from \"./edit/edit-label\";\r\n\r\nimport ProgramContext from \"../context/program\";\r\nimport DayBeingEdited from \"../context/day\";\r\nimport firebaseApp from \"../firebase\";\r\n\r\nconst EditProgram: React.FC = () => {\r\n  const [active, setActive] = useState(-1);\r\n\r\n  const history = useHistory();\r\n\r\n  const { program, days, setProgram } = useContext(ProgramContext);\r\n\r\n  const { setDay } = useContext(DayBeingEdited);\r\n\r\n  function openList(e: React.MouseEvent, index: any) {\r\n    console.log(\"openList ran\");\r\n    index === active ? setActive(-1) : setActive(index);\r\n  }\r\n\r\n  useEffect(() => {}, [program]);\r\n\r\n  return (\r\n    <section className=\"Program\">\r\n      <h2> Edit or add days to your workout:</h2>\r\n      <ul className={\"fa-ul add\"}>\r\n        {days &&\r\n          days.map(([name, data], index: number) => {\r\n            return (\r\n              <>\r\n                <li key={`day-${index}`} onClick={(e) => openList(e, index)}>\r\n                  <FontAwesomeIcon\r\n                    icon={faCaretRight}\r\n                    listItem\r\n                    className={index === active ? \"rotate\" : \"li-arrow\"}\r\n                  />\r\n                  <EditLabel\r\n                    labelText={name}\r\n                    editElement={(changedName) => {\r\n                      if (name !== changedName) {\r\n                        days[index][0] = changedName;\r\n                        const obj: Program = Object.fromEntries(days);\r\n                        firebaseApp.updateProgram(obj);\r\n                        setProgram(obj);\r\n                      }\r\n                    }}\r\n                    deleteElement={() => {\r\n                      days.splice(index, 1);\r\n                      const obj: Program = Object.fromEntries(days);\r\n                      firebaseApp.updateProgram(obj);\r\n                      setProgram(obj);\r\n                    }}\r\n                  />\r\n                </li>\r\n                <div className={index === active ? \"show-schedule\" : \"hide\"}>\r\n                  <AddButton\r\n                    caption={\"muscle group\"}\r\n                    callback={() => {\r\n                      setDay(name);\r\n\r\n                      history.push({\r\n                        pathname: `/add-muscle-group`,\r\n                        search: `?day=${name}`,\r\n                      });\r\n                    }}\r\n                  />\r\n                  <EditProgramDay data={data} dayId={index} dayName={name} />\r\n                </div>\r\n              </>\r\n            );\r\n          })}\r\n      </ul>\r\n\r\n      <AddButton\r\n        caption={\"day\"}\r\n        styleClass={\"add-day-btn\"}\r\n        callback={() => {\r\n          history.push({\r\n            pathname: `/add-new-day`,\r\n          });\r\n        }}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EditProgram;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./add.css\";\r\nimport AddButton from \"./add-button\";\r\n\r\ninterface Props {\r\n  defaultValue: string;\r\n  label?: string;\r\n  buttonLabel?: string;\r\n  callback?: (p?: string) => void;\r\n}\r\n\r\nconst Add: React.FC<Props> = ({\r\n  defaultValue,\r\n  label,\r\n  buttonLabel,\r\n  callback,\r\n}) => {\r\n  const [value, setValue] = useState<string>(defaultValue);\r\n  const labelRef = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (labelRef.current) {\r\n      labelRef.current.focus();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <section className=\"add-day\">\r\n      <label htmlFor={\"day-name\"}>\r\n        <h2 className={\"add-header\"}>{label ? label : \"Name\"}</h2>\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        className={\"add-label\"}\r\n        name=\"day-name\"\r\n        contentEditable={true}\r\n        ref={labelRef}\r\n        onChange={(e) => setValue((e.target as HTMLInputElement).value)}\r\n      />\r\n      <AddButton\r\n        caption={buttonLabel || \"\"}\r\n        callback={() => {\r\n          callback && callback(value);\r\n        }}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Add;\r\n","import { useCallback, useRef, useState } from \"react\";\r\n\r\nconst useLongPress = (\r\n  onLongPress,\r\n  onClick,\r\n  { shouldPreventDefault = true, delay = 300 } = {}\r\n) => {\r\n  const [longPressTriggered, setLongPressTriggered] = useState(false);\r\n  const timeout = useRef();\r\n  const target = useRef();\r\n\r\n  const start = useCallback(\r\n    (event) => {\r\n      if (shouldPreventDefault && event.target) {\r\n        event.target.addEventListener(\"touchend\", preventDefault, {\r\n          passive: false,\r\n        });\r\n        target.current = event.target;\r\n      }\r\n      timeout.current = setTimeout(() => {\r\n        onLongPress(event);\r\n        setLongPressTriggered(true);\r\n      }, delay);\r\n    },\r\n    [onLongPress, delay, shouldPreventDefault]\r\n  );\r\n\r\n  const clear = useCallback(\r\n    (event, shouldTriggerClick = true) => {\r\n      timeout.current && clearTimeout(timeout.current);\r\n      shouldTriggerClick && !longPressTriggered && onClick(event);\r\n      setLongPressTriggered(false);\r\n      if (shouldPreventDefault && target.current) {\r\n        target.current.removeEventListener(\"touchend\", preventDefault);\r\n      }\r\n    },\r\n    [shouldPreventDefault, onClick, longPressTriggered]\r\n  );\r\n\r\n  return {\r\n    onMouseDown: (e) => start(e),\r\n    onTouchStart: (e) => start(e),\r\n    onMouseUp: (e) => clear(e),\r\n    onMouseLeave: (e) => clear(e, false),\r\n    onTouchEnd: (e) => clear(e),\r\n  };\r\n};\r\n\r\nconst isTouchEvent = (event) => {\r\n  return \"touches\" in event;\r\n};\r\n\r\nconst preventDefault = (event) => {\r\n  if (!isTouchEvent(event)) return;\r\n\r\n  if (event.touches.length < 2 && event.preventDefault) {\r\n    event.preventDefault();\r\n  }\r\n};\r\n\r\nexport default useLongPress;\r\n","import React from \"react\";\r\nimport ContentLoader from \"react-content-loader\";\r\n\r\nimport \"../styles/global.css\";\r\n\r\nconst LoadingCode = (props) => (\r\n  <div className=\"loading-code-container\">\r\n    <ContentLoader\r\n      speed={2}\r\n      width={340}\r\n      height={84}\r\n      viewBox=\"0 0 340 84\"\r\n      backgroundColor=\"hsl(213, 74%, 20%)\"\r\n      foregroundColor=\"hsl(205, 58%, 40%)\"\r\n      {...props}\r\n    >\r\n      <rect x=\"0\" y=\"0\" rx=\"3\" ry=\"3\" width=\"67\" height=\"11\" />\r\n      <rect x=\"76\" y=\"0\" rx=\"3\" ry=\"3\" width=\"140\" height=\"11\" />\r\n      <rect x=\"127\" y=\"48\" rx=\"3\" ry=\"3\" width=\"53\" height=\"11\" />\r\n      <rect x=\"187\" y=\"48\" rx=\"3\" ry=\"3\" width=\"72\" height=\"11\" />\r\n      <rect x=\"18\" y=\"48\" rx=\"3\" ry=\"3\" width=\"100\" height=\"11\" />\r\n      <rect x=\"0\" y=\"71\" rx=\"3\" ry=\"3\" width=\"37\" height=\"11\" />\r\n      <rect x=\"18\" y=\"23\" rx=\"3\" ry=\"3\" width=\"140\" height=\"11\" />\r\n      <rect x=\"166\" y=\"23\" rx=\"3\" ry=\"3\" width=\"173\" height=\"11\" />\r\n    </ContentLoader>\r\n  </div>\r\n);\r\n\r\nexport default LoadingCode;\r\n","import React from \"react\";\r\nimport exerciseGroupsList from \"../components/add/default-data/exercisegroups\";\r\nimport ExercisesList from \"../components/add/default-data/exercises\";\r\nimport muscleList from \"../components/add/default-data/muscles\";\r\n\r\ninterface UsersListsInt {\r\n  muscleList: string[] | undefined;\r\n  sectionList: string[] | undefined;\r\n  exercisesList: Record<string, string[]> | undefined;\r\n  setUsersList: (newlist: {\r\n    newMuscleList?: string[] | undefined;\r\n    newSectionList?: string[] | undefined;\r\n    newExercisesList?: Record<string, string[]> | undefined;\r\n  }) => void;\r\n}\r\n\r\nconst UsersLists = React.createContext<UsersListsInt>({\r\n  muscleList: muscleList,\r\n  sectionList: exerciseGroupsList,\r\n  exercisesList: ExercisesList,\r\n  setUsersList: (newList: {\r\n    newMuscleList?: string[] | undefined;\r\n    newSectionList?: string[] | undefined;\r\n    newExercisesList?: Record<string, string[]> | undefined;\r\n  }): void => {},\r\n});\r\n\r\nexport default UsersLists;\r\n","import React, { useContext, useState, useEffect, useCallback } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport useLongPress from \"../hooks/useLongPress\";\r\nimport { useQueryParams, StringParam } from \"use-query-params\";\r\n\r\nimport MuscleContext from \"../../context/muscle\";\r\n\r\nimport DayBeingEdited from \"../../context/day\";\r\nimport SectionContext from \"../../context/section\";\r\nimport LoadingCode from \"../loading-code\";\r\nimport UsersLists from \"../../context/userlists\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport firebaseApp from \"../../firebase\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCheckCircle,\r\n  faCircle,\r\n  faTimes,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\ninterface Props {\r\n  header: string;\r\n  callback?: (p: string | string[]) => void;\r\n}\r\n\r\nconst AddList: React.FC<Props> = ({ header, callback }) => {\r\n  const [user, loadingUser, error] = useAuthState(firebaseApp.auth);\r\n  const { dayEdit, setDay } = useContext(DayBeingEdited);\r\n  const { muscle, setMuscle } = useContext(MuscleContext);\r\n  const { section, setSection } = useContext(SectionContext);\r\n  const { muscleList, sectionList, exercisesList, setUsersList } = useContext(\r\n    UsersLists\r\n  );\r\n\r\n  //longpress states\r\n  const [MultiSelect, setMultiSelect] = useState(false);\r\n  const [MultiSelectArray, setMultiSelectArray] = useState<string[]>([]);\r\n\r\n  const [listKeys, setListKeys] = useState(Object.keys(exercisesList || {})); //render the exercises list\r\n  const [list, setList] = useState<string[]>(); //render the list of items\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [query, setQuery] = useQueryParams({\r\n    day: StringParam,\r\n    group: StringParam,\r\n    sectionQ: StringParam,\r\n  });\r\n\r\n  /* render list */\r\n  const renderExerciseList = useCallback(() => {\r\n    const muscleName = listKeys.find((element) => element === muscle);\r\n    if (muscleName) {\r\n      setList(exercisesList![muscle]);\r\n    }\r\n  }, [exercisesList, listKeys, muscle]);\r\n\r\n  const renderList = useCallback(() => {\r\n    switch (header) {\r\n      case \"Muscle\":\r\n        setList(muscleList);\r\n        break;\r\n      case \"Section\":\r\n        setList(sectionList);\r\n        break;\r\n      case \"Exercise\":\r\n        exercisesList && setList(exercisesList[muscle]);\r\n        exercisesList && setListKeys(Object.keys(exercisesList));\r\n        renderExerciseList();\r\n        break;\r\n    }\r\n  }, [\r\n    exercisesList,\r\n    header,\r\n    muscle,\r\n    muscleList,\r\n    renderExerciseList,\r\n    sectionList,\r\n  ]);\r\n  /* onClick and LongPress setup */\r\n\r\n  const onLongPress = (e: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\r\n    if (header === \"Exercise\") {\r\n      console.log((e.target as Element).id);\r\n      setMultiSelect(true);\r\n      setMultiSelectArray((oldArray) => [\r\n        ...oldArray,\r\n        (e.target as Element).innerHTML,\r\n      ]);\r\n    } else {\r\n      onClick(e);\r\n    }\r\n  };\r\n\r\n  const onClick = (e: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\r\n    if (header === \"Exercise\" && setMultiSelect) {\r\n      setMultiSelectArray((oldArray) => [\r\n        ...oldArray,\r\n        (e.target as Element).innerHTML,\r\n      ]);\r\n    } else {\r\n      callback && callback((e.target as Element).innerHTML);\r\n    }\r\n  };\r\n\r\n  const defaultOptions = {\r\n    shouldPreventDefault: true,\r\n    delay: 500,\r\n  };\r\n\r\n  const longPressEvent = useLongPress(onLongPress, onClick, defaultOptions);\r\n\r\n  const { day, group, sectionQ } = query;\r\n  useEffect(() => {\r\n    if (section === \"\" || muscle === \"\" || dayEdit === \"\") {\r\n      setLoading(true);\r\n      if (day || group || sectionQ) {\r\n        day && setDay(day);\r\n        group && setMuscle(group);\r\n        sectionQ && setSection(sectionQ);\r\n        setLoading(false);\r\n        renderList();\r\n      } else {\r\n        history.push(\"/\");\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    renderList();\r\n  }, [renderList]);\r\n\r\n  return !loading && list ? (\r\n    <>\r\n      <h2>{header}</h2>\r\n\r\n      <ul className={\"add-list\"}>\r\n        {list &&\r\n          list.map((listItem, index) => {\r\n            return (\r\n              <li\r\n                {...longPressEvent}\r\n                key={`${index}-${listItem}`}\r\n                id={`${index}-${listItem}`}\r\n                className={\r\n                  MultiSelectArray.includes(listItem) ? \"selected-exercise\" : \"\"\r\n                }\r\n              >\r\n                {listItem}\r\n              </li>\r\n            );\r\n          })}\r\n      </ul>\r\n      {MultiSelect && (\r\n        <div className=\"multiselect-buttons\">\r\n          <span\r\n            className={\"fa-layers fa-fw visible\"}\r\n            onClick={(e) => {\r\n              setMultiSelectArray([]);\r\n              setMultiSelect(false);\r\n            }}\r\n          >\r\n            <FontAwesomeIcon\r\n              icon={faCircle}\r\n              color={\"var(--light-red)\"}\r\n              size={\"4x\"}\r\n            />\r\n            <FontAwesomeIcon icon={faTimes} color=\"white\" size={\"3x\"} />\r\n          </span>\r\n          <FontAwesomeIcon\r\n            icon={faCheckCircle}\r\n            className={\"check-edit visible\"}\r\n            onClick={(e) => {\r\n              callback && callback(MultiSelectArray);\r\n            }}\r\n            size={\"4x\"}\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  ) : (\r\n    <LoadingCode />\r\n  );\r\n};\r\n\r\nexport default AddList;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport AddList from \"../add-list-new\";\r\n\r\nimport DayBeingEdited from \"../../../context/day\";\r\nimport MuscleContext from \"../../../context/muscle\";\r\n\r\nconst AddMuscleGroup: React.FC = () => {\r\n  const history = useHistory();\r\n\r\n  const { dayEdit } = useContext(DayBeingEdited);\r\n  const { setMuscle } = useContext(MuscleContext);\r\n\r\n  useEffect(() => {}, [dayEdit]);\r\n\r\n  return (\r\n    <AddList\r\n      header={`Muscle`}\r\n      callback={(newMuscle) => {\r\n        !Array.isArray(newMuscle) && setMuscle(newMuscle);\r\n        history.push({\r\n          pathname: \"/add-muscle-group/2\",\r\n          search: `?day=${dayEdit}&group=${newMuscle}`,\r\n        });\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AddMuscleGroup;\r\n","import React, { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport AddList from \"../add-list-new\";\r\n\r\nimport DayBeingEdited from \"../../../context/day\";\r\nimport MuscleContext from \"../../../context/muscle\";\r\nimport SectionContext from \"../../../context/section\";\r\n\r\nconst AddSectionFromMuscleGroup = () => {\r\n  const history = useHistory();\r\n\r\n  const { dayEdit } = useContext(DayBeingEdited);\r\n  const { muscle } = useContext(MuscleContext);\r\n  const { section, setSection } = useContext(SectionContext);\r\n\r\n  return (\r\n    <AddList\r\n      header={\"Section\"}\r\n      callback={(param) => {\r\n        !Array.isArray(param) && setSection(param);\r\n        history.push({\r\n          pathname: \"/add-muscle-group/3\",\r\n          search: `?day=${dayEdit}&group=${muscle}&sectionQ=${section}`,\r\n        });\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AddSectionFromMuscleGroup;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport AddList from \"../add-list-new\";\r\n\r\nimport ProgramContext from \"../../../context/program\";\r\nimport DayBeingEdited from \"../../../context/day\";\r\nimport MuscleContext from \"../../../context/muscle\";\r\nimport SectionContext from \"../../../context/section\";\r\nimport Program from \"../../../interfaces/program\";\r\nimport firebaseApp from \"../../../firebase\";\r\n\r\nconst AddExerciseFromMuscleGroup: React.FC = () => {\r\n  const history = useHistory();\r\n\r\n  const { program, setProgram } = useContext(ProgramContext);\r\n  const { dayEdit } = useContext(DayBeingEdited);\r\n  const { muscle } = useContext(MuscleContext);\r\n  const { section } = useContext(SectionContext);\r\n\r\n  const [clonedProgram, setClonedProgram] = useState<Program>();\r\n\r\n  useEffect(() => {\r\n    if (program) {\r\n      setClonedProgram(program);\r\n    }\r\n  }, [program]);\r\n\r\n  return (\r\n    <AddList\r\n      header={\"Exercise\"}\r\n      callback={(param) => {\r\n        if (clonedProgram) {\r\n          clonedProgram[dayEdit][muscle] = {};\r\n          clonedProgram[dayEdit][muscle][section] = [];\r\n          Array.isArray(param)\r\n            ? clonedProgram[dayEdit][muscle][section].push(...param)\r\n            : clonedProgram[dayEdit][muscle][section].push(param);\r\n          firebaseApp.updateProgram(clonedProgram);\r\n          setProgram(clonedProgram);\r\n          history.push(`/${dayEdit}`);\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AddExerciseFromMuscleGroup;\r\n","import React, { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport AddList from \"../add-list-new\";\r\n\r\nimport DayBeingEdited from \"../../../context/day\";\r\nimport MuscleContext from \"../../../context/muscle\";\r\nimport SectionContext from \"../../../context/section\";\r\n\r\nconst AddSection: React.FC = () => {\r\n  const history = useHistory();\r\n\r\n  const { dayEdit } = useContext(DayBeingEdited);\r\n  const { muscle } = useContext(MuscleContext);\r\n  const { section, setSection } = useContext(SectionContext);\r\n\r\n  return (\r\n    <AddList\r\n      header={\"Section\"}\r\n      callback={(param) => {\r\n        !Array.isArray(param) && setSection(param);\r\n        history.push({\r\n          pathname: \"/add-section/2\",\r\n          search: `?day=${dayEdit}&group=${muscle}&sectionQ=${section}`,\r\n        });\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AddSection;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport AddList from \"../add-list-new\";\r\n\r\nimport ProgramContext from \"../../../context/program\";\r\nimport DayBeingEdited from \"../../../context/day\";\r\nimport MuscleContext from \"../../../context/muscle\";\r\nimport SectionContext from \"../../../context/section\";\r\nimport Program from \"../../../interfaces/program\";\r\nimport firebaseApp from \"../../../firebase\";\r\n\r\nconst AddExerciseFromSection = () => {\r\n  const history = useHistory();\r\n\r\n  const { program, setProgram } = useContext(ProgramContext);\r\n  const { dayEdit } = useContext(DayBeingEdited);\r\n  const { muscle } = useContext(MuscleContext);\r\n  const { section } = useContext(SectionContext);\r\n\r\n  const [clonedProgram, setClonedProgram] = useState<Program>();\r\n\r\n  useEffect(() => {\r\n    if (program) {\r\n      setClonedProgram(program);\r\n    }\r\n  }, [program]);\r\n\r\n  return (\r\n    <AddList\r\n      header={\"Exercise\"}\r\n      callback={(param) => {\r\n        if (clonedProgram) {\r\n          clonedProgram[dayEdit][muscle][section] = [];\r\n          Array.isArray(param)\r\n            ? clonedProgram[dayEdit][muscle][section].push(...param)\r\n            : clonedProgram[dayEdit][muscle][section].push(param);\r\n          firebaseApp.updateProgram(clonedProgram);\r\n          setProgram(clonedProgram);\r\n          history.push(`/${dayEdit}`);\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AddExerciseFromSection;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport AddList from \"../add-list-new\";\r\n\r\nimport ProgramContext from \"../../../context/program\";\r\nimport DayBeingEdited from \"../../../context/day\";\r\nimport MuscleContext from \"../../../context/muscle\";\r\nimport SectionContext from \"../../../context/section\";\r\nimport Program from \"../../../interfaces/program\";\r\nimport firebaseApp from \"../../../firebase\";\r\n\r\nconst AddExercise: React.FC = () => {\r\n  const history = useHistory();\r\n\r\n  const { program, setProgram } = useContext(ProgramContext);\r\n  const { dayEdit } = useContext(DayBeingEdited);\r\n  const { muscle } = useContext(MuscleContext);\r\n  const { section } = useContext(SectionContext);\r\n\r\n  const [clonedDay, setClonedDay] = useState<Program>();\r\n  const [clonedProgram, setClonedProgram] = useState<Program>();\r\n\r\n  useEffect(() => {\r\n    if (program) {\r\n      setClonedDay(program);\r\n      setClonedProgram(program);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <AddList\r\n      header={\"Exercise\"}\r\n      callback={(param) => {\r\n        if (clonedDay && clonedProgram) {\r\n          Array.isArray(param)\r\n            ? clonedDay[dayEdit][muscle][section].push(...param)\r\n            : clonedDay[dayEdit][muscle][section].push(param);\r\n          clonedProgram[dayEdit] = clonedDay[dayEdit];\r\n          firebaseApp.updateProgram(clonedProgram);\r\n          setProgram(clonedProgram);\r\n          history.push(`/${dayEdit}`);\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AddExercise;\r\n","import React, { useContext } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport DayBeingEdited from \"../../../context/day\";\r\nimport ProgramContext from \"../../../context/program\";\r\nimport Add from \"../add\";\r\n\r\nconst AddNewDay = () => {\r\n  const { days } = useContext(ProgramContext);\r\n  const { setDay } = useContext(DayBeingEdited);\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Add\r\n      defaultValue={days ? `Day ${days.length + 1}` : \"Day 1\"}\r\n      label={\"Choose a name\"}\r\n      buttonLabel={\"day\"}\r\n      callback={(value) => {\r\n        value && setDay(value);\r\n        history.push({\r\n          pathname: \"/add-new-day/2\",\r\n          search: `?day=${value}`,\r\n        });\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AddNewDay;\r\n","import React, { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport AddList from \"../add-list-new\";\r\n\r\nimport DayBeingEdited from \"../../../context/day\";\r\nimport MuscleContext from \"../../../context/muscle\";\r\n\r\nconst AddMuscleGroupNewDay: React.FC = () => {\r\n  const history = useHistory();\r\n\r\n  const { dayEdit } = useContext(DayBeingEdited);\r\n  const { setMuscle } = useContext(MuscleContext);\r\n\r\n  return (\r\n    <AddList\r\n      header={`Muscle`}\r\n      callback={(newMuscle) => {\r\n        !Array.isArray(newMuscle) && setMuscle(newMuscle);\r\n        history.push({\r\n          pathname: \"/add-new-day/3\",\r\n          search: `?day=${dayEdit}&group=${newMuscle}`,\r\n        });\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AddMuscleGroupNewDay;\r\n","import React, { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport AddList from \"../add-list-new\";\r\n\r\nimport DayBeingEdited from \"../../../context/day\";\r\nimport MuscleContext from \"../../../context/muscle\";\r\nimport SectionContext from \"../../../context/section\";\r\n\r\nconst AddSectionNewDay: React.FC = () => {\r\n  const history = useHistory();\r\n\r\n  const { dayEdit } = useContext(DayBeingEdited);\r\n  const { muscle } = useContext(MuscleContext);\r\n  const { setSection } = useContext(SectionContext);\r\n\r\n  return (\r\n    <AddList\r\n      header={\"Section\"}\r\n      callback={(param) => {\r\n        !Array.isArray(param) && setSection(param);\r\n        history.push({\r\n          pathname: \"/add-new-day/4\",\r\n          search: `?day=${dayEdit}&group=${muscle}&sectionQ=${param}`,\r\n        });\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AddSectionNewDay;\r\n","import { useContext, useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport AddList from \"../add-list-new\";\r\n\r\nimport ProgramContext from \"../../../context/program\";\r\nimport DayBeingEdited from \"../../../context/day\";\r\nimport MuscleContext from \"../../../context/muscle\";\r\nimport SectionContext from \"../../../context/section\";\r\nimport Program from \"../../../interfaces/program\";\r\nimport firebaseApp from \"../../../firebase\";\r\n\r\nconst AddExerciseNewDay = () => {\r\n  const history = useHistory();\r\n\r\n  const { program, setProgram } = useContext(ProgramContext);\r\n  const { dayEdit } = useContext(DayBeingEdited);\r\n  const { muscle } = useContext(MuscleContext);\r\n  const { section } = useContext(SectionContext);\r\n\r\n  const [clonedProgram, setClonedProgram] = useState<Program>();\r\n\r\n  useEffect(() => {\r\n    if (program) {\r\n      setClonedProgram(program);\r\n    } else setClonedProgram({});\r\n  }, [program]);\r\n\r\n  return (\r\n    <AddList\r\n      header={\"Exercise\"}\r\n      callback={(param) => {\r\n        if (clonedProgram) {\r\n          clonedProgram[dayEdit] = {};\r\n          clonedProgram[dayEdit][muscle] = {};\r\n          clonedProgram[dayEdit][muscle][section] = [];\r\n          Array.isArray(param)\r\n            ? clonedProgram[dayEdit][muscle][section].push(...param)\r\n            : clonedProgram[dayEdit][muscle][section].push(param);\r\n          firebaseApp.updateProgram(clonedProgram);\r\n          setProgram(clonedProgram);\r\n\r\n          history.push(`/${dayEdit}`);\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AddExerciseNewDay;\r\n","import React from \"react\";\r\nimport FirebaseApp from \"../../firebase\";\r\n\r\nconst SignIn: React.FC = () => {\r\n  return (\r\n    <button\r\n      onClick={(e) => {\r\n        e.preventDefault();\r\n        FirebaseApp.login();\r\n      }}\r\n      className={\"sign-in-btn\"}\r\n    >\r\n      Sign in with Google\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import React, { useContext } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport ProgramContext from \"../../context/program\";\r\nimport FirebaseApp from \"../../firebase\";\r\n\r\nconst SignOut = () => {\r\n  const { setProgram } = useContext(ProgramContext);\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <button\r\n      onClick={() => {\r\n        FirebaseApp.logout().then(() => {\r\n          setProgram({});\r\n          history.push(\"/home\");\r\n          console.log(history);\r\n        });\r\n      }}\r\n    >\r\n      Sign Out\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SignOut;\r\n","import React from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\n\r\nimport firebaseApp from \"../../firebase\";\r\n\r\nimport SignIn from \"../auth/sign-in\";\r\n\r\nimport SignOut from \"../auth/sign-out\";\r\n\r\ninterface Props {\r\n  isOpen: boolean;\r\n  callback: () => void;\r\n}\r\n\r\nconst BurgerMenu: React.FC<Props> = ({ isOpen, callback }) => {\r\n  const [user] = useAuthState(firebaseApp.auth);\r\n\r\n  return (\r\n    <>\r\n      <div className={isOpen ? \"burger-menu menu-active\" : \"burger-menu\"}>\r\n        <ul>\r\n          <li className=\"user-info\">\r\n            {user && (\r\n              <>\r\n                <img src={user.photoURL!} alt={user.displayName!} />\r\n                {user.displayName}\r\n              </>\r\n            )}\r\n            <span onClick={() => callback()}>\r\n              {user ? <SignOut /> : <SignIn />}\r\n            </span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BurgerMenu;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { HamburgerEmphatic } from \"react-animated-burgers\";\r\nimport BurgerMenu from \"./burger-menu\";\r\n\r\nimport \"./menu.css\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport firebaseApp from \"../../firebase\";\r\n\r\nconst TopNav = () => {\r\n  const [IsActive, setIsActive] = useState<boolean>(false);\r\n  const [IsSideMenuOpen, setIsSideMenuOpen] = useState<boolean>(false);\r\n  const [user] = useAuthState(firebaseApp.auth);\r\n\r\n  return (\r\n    <>\r\n      <BurgerMenu\r\n        isOpen={IsSideMenuOpen}\r\n        callback={() => {\r\n          setIsActive(false);\r\n          setIsSideMenuOpen(false);\r\n        }}\r\n      />\r\n      <HamburgerEmphatic\r\n        isActive={IsActive}\r\n        className={\"burger-menu-btn\"}\r\n        toggleButton={() => {\r\n          setIsActive(!IsActive);\r\n          setIsSideMenuOpen(!IsSideMenuOpen);\r\n        }}\r\n        barColor=\"white\"\r\n      />\r\n      <h3 className=\"nav-header\">Workout</h3>\r\n      {user && (\r\n        <Link to=\"/edit\">\r\n          <FontAwesomeIcon icon={faEdit} size=\"1x\" />\r\n        </Link>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TopNav;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCaretLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst BackButton = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <FontAwesomeIcon\r\n      icon={faCaretLeft}\r\n      className={\"back-button\"}\r\n      onClick={() => {\r\n        history.goBack();\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BackButton;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport MuscleContext from \"../../context/muscle\";\r\n\r\nimport { useHistory } from \"react-router\";\r\n\r\ninterface Props {\r\n  header: string;\r\n}\r\n\r\ninterface linkURLInt {\r\n  pathname: string;\r\n  search: string;\r\n}\r\n\r\nconst PlusButtton: React.FC<Props> = ({ header }) => {\r\n  const { muscle } = useContext(MuscleContext);\r\n  const history = useHistory();\r\n\r\n  const [linkURL, setLinkURL] = useState<linkURLInt>({\r\n    pathname: ``,\r\n    search: `?`,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (header === \"Add Exercise\") {\r\n      setLinkURL({\r\n        pathname: `/add-to-exercise-list`,\r\n        search: `?group=${muscle}`,\r\n      });\r\n    } else if (header === \"Add Section\") {\r\n      setLinkURL({\r\n        pathname: `/add-to-section-list`,\r\n        search: ``,\r\n      });\r\n    } else if (header === \"Add Muscle\") {\r\n      setLinkURL({\r\n        pathname: `/add-to-muscle-list`,\r\n        search: ``,\r\n      });\r\n    }\r\n  }, [header]);\r\n\r\n  return (\r\n    <FontAwesomeIcon\r\n      icon={faPlus}\r\n      className={\"plus-button\"}\r\n      onClick={() => {\r\n        history.push(linkURL);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PlusButtton;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nimport BackButton from \"./back-button\";\r\nimport PlusButton from \"./plus-button\";\r\n\r\ninterface Props {\r\n  header?: string;\r\n  plus?: boolean;\r\n}\r\n\r\nconst NavAdd: React.FC<Props> = ({ header, plus = true }) => {\r\n  const [headerFromPath, setHeader] = useState<string>(\"\");\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (location.pathname.startsWith(\"/add-muscle\")) {\r\n      location.pathname === \"/add-muscle-group\" && setHeader(\"Add Muscle\");\r\n      location.pathname === \"/add-muscle-group/2\" && setHeader(\"Add Section\");\r\n      location.pathname === \"/add-muscle-group/3\" && setHeader(\"Add Exercise\");\r\n    } else if (location.pathname.startsWith(\"/add-section\")) {\r\n      location.pathname === \"/add-section\" && setHeader(\"Add Section\");\r\n      location.pathname === \"/add-section/2\" && setHeader(\"Add Exercise\");\r\n    } else if (location.pathname.startsWith(\"/add-exercise\")) {\r\n      setHeader(\"Add Exercise\");\r\n    } else if (location.pathname.startsWith(\"/add-new-day\")) {\r\n      location.pathname === \"/add-new-day\" && setHeader(\"Add Day\");\r\n      location.pathname === \"/add-new-day/2\" && setHeader(\"Add Muscle\");\r\n      location.pathname === \"/add-new-day/3\" && setHeader(\"Add Section\");\r\n      location.pathname === \"/add-new-day/4\" && setHeader(\"Add Exercise\");\r\n    }\r\n  }, [location.pathname]);\r\n\r\n  return (\r\n    <nav className={\"add\"}>\r\n      <BackButton />\r\n      <h3 className={\"nav-header\"}>{header || headerFromPath}</h3>\r\n      {plus && location.pathname !== \"/add-new-day\" && (\r\n        <PlusButton header={headerFromPath && headerFromPath} />\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavAdd;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { withRouter, NavLink, useLocation } from \"react-router-dom\";\r\n\r\nimport ProgramContext from \"../../context/program\";\r\n\r\nimport TopNav from \"./top-nav\";\r\nimport NavAdd from \"./nav-add\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport firebaseApp from \"../../firebase\";\r\n\r\nconst Nav: React.FC = () => {\r\n  const { days } = useContext(ProgramContext);\r\n  const location = useLocation();\r\n\r\n  const [renderWorkoutNav, setRenderWorkoutNav] = useState<\r\n    JSX.Element[] | JSX.Element\r\n  >();\r\n  const [renderTopNav, setRenderTopNav] = useState<JSX.Element>();\r\n\r\n  const [user] = useAuthState(firebaseApp.auth);\r\n\r\n  useEffect(() => {\r\n    //logged out\r\n    if (!user) {\r\n      setRenderTopNav(<TopNav />);\r\n      setRenderWorkoutNav(undefined);\r\n    }\r\n    //logged in\r\n    else if (user && !location.pathname.startsWith(\"/add\")) {\r\n      setRenderTopNav(<TopNav />);\r\n      days //has a program\r\n        ? setRenderWorkoutNav(\r\n            days.map(([name, data], idx) => {\r\n              return (\r\n                <NavLink\r\n                  to={`/${name}`}\r\n                  className={location.pathname === `/${name}` ? \"active\" : \"\"}\r\n                >\r\n                  {name}\r\n                </NavLink>\r\n              );\r\n            })\r\n          )\r\n        : setRenderWorkoutNav(undefined);\r\n    } else {\r\n      setRenderTopNav(<NavAdd />);\r\n      setRenderWorkoutNav(undefined);\r\n    }\r\n  }, [days, location.pathname, user]);\r\n\r\n  return (\r\n    <>\r\n      <nav>{renderTopNav}</nav>\r\n      {renderWorkoutNav && (\r\n        <nav className={\"days-container\"}>{renderWorkoutNav}</nav>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Nav);\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useHistory, withRouter } from \"react-router\";\r\nimport ProgramContext from \"../context/program\";\r\nimport FirebaseApp from \"../firebase\";\r\nimport AddButton from \"./add/add-button\";\r\nimport SignIn from \"./auth/sign-in\";\r\n\r\nconst Home = (props) => {\r\n  const [user, loading, error] = useAuthState(FirebaseApp.auth);\r\n  const { days } = useContext(ProgramContext);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (days && days[0] !== undefined) {\r\n      history.push(`/${days[0][0]}`);\r\n    }\r\n  }, [days]);\r\n\r\n  return (\r\n    <div>\r\n      {user ? (\r\n        <>\r\n          <h2>Hello, {user.displayName}! let's start creating your workout:</h2>\r\n          <AddButton\r\n            caption={\"day\"}\r\n            styleClass={\"add-day-btn\"}\r\n            callback={() => {\r\n              history.push({\r\n                pathname: `/add-new-day`,\r\n              });\r\n            }}\r\n          />\r\n        </>\r\n      ) : (\r\n        <SignIn />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Home);\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useLocation,\r\n  useHistory,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { QueryParamProvider } from \"use-query-params\";\r\n\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\n\r\nimport ProgramDay from \"./components/program/program-day\";\r\nimport EditProgram from \"./components/editprogram\";\r\nimport Add from \"./components/add/add\";\r\n\r\nimport AddMuscleGroup from \"./components/add/add-muscle-group/add-muscle-group\";\r\nimport AddSectionFromMuscleGroup from \"./components/add/add-muscle-group/add-section-from-muscle-group\";\r\nimport AddExerciseFromMuscleGroup from \"./components/add/add-muscle-group/add-exercise-from-muscle-group\";\r\n\r\nimport AddSection from \"./components/add/add-section/add-section\";\r\nimport AddExerciseFromSection from \"./components/add/add-section/add-exercise-from-section\";\r\n\r\nimport AddExercise from \"./components/add/add-exercise/add-exercise\";\r\n\r\nimport AddNewDay from \"./components/add/add-new-day/add-new-day\";\r\nimport AddMuscleGroupNewDay from \"./components/add/add-new-day/add-muscle-group-new-day\";\r\nimport AddSectionNewDay from \"./components/add/add-new-day/add-section-new-day\";\r\nimport AddExerciseNewDay from \"./components/add/add-new-day/add-exercise-new-day\";\r\n\r\nimport ProgramContext from \"./context/program\";\r\n\r\nimport MuscleContext from \"./context/muscle\";\r\n\r\nimport Nav from \"./components/nav/nav\";\r\n\r\nimport SignIn from \"./components/auth/sign-in\";\r\nimport LoadingCode from \"./components/loading-code\";\r\n\r\nimport Home from \"./components/home\";\r\nimport firebaseApp from \"./firebase\";\r\n\r\nimport UsersLists from \"./context/userlists\";\r\n\r\nconst AppRouter: React.FC = () => {\r\n  const { days, program, setProgram } = useContext(ProgramContext);\r\n  const { muscleList, sectionList, exercisesList, setUsersList } = useContext(\r\n    UsersLists\r\n  );\r\n  const { muscle } = useContext(MuscleContext);\r\n  const [user] = useAuthState(firebaseApp.auth);\r\n\r\n  const [renderSwitch, setRenderSwitch] = useState<JSX.Element[]>();\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const [loadingData, setLoadingData] = useState<boolean>();\r\n\r\n  //make the user program a state\r\n  //take the updateprogram out of the setPRogram hook\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setLoadingData(true);\r\n      firebaseApp.checkIn(user).then(() => {\r\n        setProgram(firebaseApp.userProgram);\r\n        setUsersList({\r\n          newMuscleList: firebaseApp.muscleList,\r\n          newSectionList: firebaseApp.sectionList,\r\n          newExercisesList: firebaseApp.exercisesList,\r\n        });\r\n        setLoadingData(false);\r\n      });\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    days &&\r\n      setRenderSwitch(\r\n        days.map(([name, data], idx) => {\r\n          return (\r\n            <Route exact path={`/${name}`}>\r\n              <ProgramDay data={data} key={idx} />\r\n            </Route>\r\n          );\r\n        })\r\n      );\r\n  }, [days, location.pathname]);\r\n\r\n  return (\r\n    <Router>\r\n      <QueryParamProvider ReactRouterRoute={Route}>\r\n        {!loadingData ? <Nav /> : <LoadingCode />}\r\n\r\n        <Switch>\r\n          {renderSwitch}\r\n          {user ? (\r\n            <Route>\r\n              <Route\r\n                exact\r\n                path=\"/\"\r\n                render={() => (\r\n                  <Redirect\r\n                    to={program && days && days[0] ? `${days[0][0]}` : \"/home\"}\r\n                  />\r\n                )}\r\n              />\r\n\r\n              <Route exact path=\"/home\">\r\n                {user ? <Home /> : <SignIn />}\r\n              </Route>\r\n\r\n              <Route exact path=\"/edit\">\r\n                <EditProgram />\r\n              </Route>\r\n\r\n              {/* add new muscle group routes */}\r\n              <Route exact path=\"/add-muscle-group\">\r\n                <AddMuscleGroup />;\r\n              </Route>\r\n              <Route exact path=\"/add-muscle-group/2\">\r\n                <AddSectionFromMuscleGroup />;\r\n              </Route>\r\n              <Route exact path=\"/add-muscle-group/3\">\r\n                <AddExerciseFromMuscleGroup />;\r\n              </Route>\r\n\r\n              {/* add new section routes */}\r\n              <Route exact path=\"/add-section\">\r\n                <AddSection />\r\n              </Route>\r\n              <Route exact path=\"/add-section/2\">\r\n                <AddExerciseFromSection />\r\n              </Route>\r\n\r\n              {/* add new exercise routes */}\r\n              <Route exact path=\"/add-exercise\">\r\n                <AddExercise />;\r\n              </Route>\r\n\r\n              {/* add new day routes*/}\r\n              <Route exact path=\"/add-new-day\">\r\n                <AddNewDay />\r\n              </Route>\r\n\r\n              <Route exact path=\"/add-new-day/2\">\r\n                <AddMuscleGroupNewDay />\r\n              </Route>\r\n              <Route exact path=\"/add-new-day/3\">\r\n                <AddSectionNewDay />\r\n              </Route>\r\n              <Route exact path=\"/add-new-day/4\">\r\n                <AddExerciseNewDay />\r\n              </Route>\r\n\r\n              {/* add items to the AddList */}\r\n              <Route exact path=\"/add-to-exercise-list\">\r\n                <Add\r\n                  defaultValue={\"new exercise\"}\r\n                  label={`Add Exercise to ${muscle}`}\r\n                  buttonLabel={\"add exercise\"}\r\n                  callback={(value) => {\r\n                    if (value) {\r\n                      const clonedList = exercisesList;\r\n                      clonedList && clonedList[muscle].push(value);\r\n                      setUsersList({ newExercisesList: clonedList });\r\n                      firebaseApp.updateExerciseList(clonedList);\r\n                      history.goBack();\r\n                    } else {\r\n                      //need to show an error if empty value\r\n                    }\r\n                  }}\r\n                />\r\n              </Route>\r\n              <Route exact path=\"/add-to-section-list\">\r\n                <Add\r\n                  defaultValue={\"new section\"}\r\n                  label={`Add a New Section`}\r\n                  buttonLabel={\"add section\"}\r\n                  callback={(value) => {\r\n                    if (value) {\r\n                      const clonedList = sectionList;\r\n                      clonedList && clonedList.push(value);\r\n                      firebaseApp.updateSectionList(clonedList);\r\n                      history.goBack();\r\n                    }\r\n                  }}\r\n                />\r\n              </Route>\r\n              <Route exact path=\"/add-to-muscle-list\">\r\n                <Add\r\n                  defaultValue={\"new muscle\"}\r\n                  label={`Add a New Exercise Group`}\r\n                  buttonLabel={\"add group\"}\r\n                  callback={(value) => {\r\n                    if (value) {\r\n                      const clonedList = muscleList;\r\n                      clonedList && clonedList.push(value);\r\n                      const clonedExerciseList = exercisesList;\r\n                      clonedExerciseList && (clonedExerciseList[value] = []);\r\n                      firebaseApp.updateMuscleList(clonedList);\r\n                      firebaseApp.updateExerciseList(clonedExerciseList);\r\n                      history.goBack();\r\n                    }\r\n                  }}\r\n                />\r\n              </Route>\r\n            </Route>\r\n          ) : (\r\n            <Route path=\"/\">\r\n              <SignIn />\r\n            </Route>\r\n          )}\r\n        </Switch>\r\n      </QueryParamProvider>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\n\r\nexport interface Add {\r\n  defaultObj: Record<string, any> | undefined;\r\n  setAdd: (o: object) => void;\r\n}\r\n\r\nexport const addContextDefault: Add = {\r\n  defaultObj: undefined,\r\n  setAdd: (o: object): void => {},\r\n};\r\n\r\nconst SetAdd = React.createContext<Add>(addContextDefault);\r\n\r\nexport default SetAdd;\r\n","import { useEffect } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport AppRouter from \"./Router\";\n\nimport SetProgram from \"./context/program\";\nimport SetAdd from \"./context/add\";\nimport SetMuscle from \"./context/muscle\";\nimport SetSection from \"./context/section\";\nimport SetDay from \"./context/day\";\n\nimport \"./styles/global.css\";\n\nimport { useProgram } from \"./components/hooks/useProgram\";\nimport { useAdd } from \"./components/hooks/useAdd\";\nimport { useMuscle } from \"./components/hooks/useMuscle\";\nimport { useDay } from \"./components/hooks/useDay\";\nimport { useSection } from \"./components/hooks/useSection\";\nimport { useLists } from \"./components/hooks/useLists\";\nimport firebaseApp from \"./firebase/firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n\nimport LoadingCode from \"./components/loading-code\";\nimport UsersLists from \"./context/userlists\";\n\nfunction App() {\n  const program = useProgram();\n  const defaultObj = useAdd();\n  const muscle = useMuscle();\n  const section = useSection();\n  const day = useDay();\n  const lists = useLists();\n  const [user, loading, error] = useAuthState(firebaseApp.auth);\n\n  useEffect(() => {\n    if (user) {\n      window.onbeforeunload = function () {\n        return true;\n      };\n      return () => {\n        window.onbeforeunload = null;\n      };\n    }\n  }, [user]);\n\n  //useEffect(() => {}, [program]);\n\n  return (\n    <div className=\"App\">\n      <UsersLists.Provider value={lists}>\n        <SetProgram.Provider value={program}>\n          <SetAdd.Provider value={defaultObj}>\n            <SetMuscle.Provider value={muscle}>\n              <SetSection.Provider value={section}>\n                <SetDay.Provider value={day}>\n                  <Router>{loading ? <LoadingCode /> : <AppRouter />}</Router>\n                </SetDay.Provider>\n              </SetSection.Provider>\n            </SetMuscle.Provider>\n          </SetAdd.Provider>\n        </SetProgram.Provider>\n      </UsersLists.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\n\r\nimport Program, { muscleGroup } from \"../../interfaces/program\";\r\n\r\nexport const useProgram = () => {\r\n  const [program, setEditedProgram] = React.useState<Program | undefined>();\r\n\r\n  const [days, setProgramDays] = React.useState<\r\n    [string, muscleGroup][] | undefined\r\n  >(program && Object.entries(program));\r\n\r\n  const setProgram = React.useCallback((newProgram: Program): void => {\r\n    setEditedProgram(newProgram);\r\n    setProgramDays(Object.entries(newProgram));\r\n  }, []);\r\n\r\n  return {\r\n    program,\r\n    days,\r\n    setProgram,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Add } from \"../../context/add\";\r\n\r\nexport const useAdd = (): Add => {\r\n  const [defaultObj, setDefaultObj] = React.useState<Record<string, any>>({});\r\n\r\n  const setAdd = React.useCallback((p: object): void => {\r\n    setDefaultObj(p);\r\n  }, []);\r\n\r\n  return {\r\n    defaultObj,\r\n    setAdd,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { MuscleContextInt } from \"../../context/muscle\";\r\n\r\nexport const useMuscle = (): MuscleContextInt => {\r\n  const [muscle, setNewMuscle] = React.useState<string>(\"\");\r\n\r\n  const setMuscle = React.useCallback((muscle: string): void => {\r\n    setNewMuscle(muscle);\r\n  }, []);\r\n\r\n  return {\r\n    muscle,\r\n    setMuscle,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { SectionContextInt } from \"../../context/section\";\r\n\r\nexport const useSection = (): SectionContextInt => {\r\n  const [section, setNewSection] = React.useState<string>(\"\");\r\n\r\n  const setSection = React.useCallback((Section: string): void => {\r\n    setNewSection(Section);\r\n  }, []);\r\n\r\n  return {\r\n    section,\r\n    setSection,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { DayBeingEditedInt } from \"../../context/day\";\r\n\r\nexport const useDay = (): DayBeingEditedInt => {\r\n  const [dayEdit, setCurrentDay] = React.useState<string>(\"\");\r\n\r\n  const setDay = React.useCallback((dayName: string): void => {\r\n    setCurrentDay(dayName);\r\n  }, []);\r\n\r\n  return {\r\n    dayEdit,\r\n    setDay,\r\n  };\r\n};\r\n","import React from \"react\";\r\n\r\nexport const useLists = () => {\r\n  const [muscleList, setMuscleList] = React.useState<string[]>();\r\n  const [sectionList, setSectionList] = React.useState<string[]>();\r\n  const [exercisesList, setExerciseList] = React.useState<\r\n    Record<string, string[]>\r\n  >();\r\n\r\n  const setUsersList = React.useCallback(\r\n    (newList: {\r\n      newMuscleList?: string[] | undefined;\r\n      newSectionList?: string[] | undefined;\r\n      newExercisesList?: Record<string, string[]> | undefined;\r\n    }): void => {\r\n      newList.newMuscleList && setMuscleList(newList.newMuscleList);\r\n      newList.newSectionList && setSectionList(newList.newSectionList);\r\n      newList.newExercisesList && setExerciseList(newList.newExercisesList);\r\n    },\r\n    []\r\n  );\r\n\r\n  return {\r\n    muscleList,\r\n    sectionList,\r\n    exercisesList,\r\n    setUsersList,\r\n  };\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}